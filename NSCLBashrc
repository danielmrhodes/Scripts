#echo sourcing .bashrc

source /mnt/misc/sw/x86_64/Debian/8/geant4/gnu/4.9.6.02/share/Geant4-9.6.2/geant4make/geant4make.sh
#module load geant4/4.9.6.02 root/gnu/5.34.32;

#source /scratch/Programs/geant4.10.02.p02/build/geant4make.sh
export PATH=$PATH:~/geant4_workdir/bin/Linux-g++
PATH=$PATH:/user/rhodesd/pecan-2015/SeGA_Janus_2018/gosia2
PATH=$PATH:/user/rhodesd/pecan-2015/SeGA_Janus_2018/gosia
PATH=$PATH:/user/rhodesd/pecan-2015/SeGA_Janus_2018/chisqsurface/bin
PATH=$PATH:/user/rhodesd/pecan-2015/SeGA_Janus_2018/sigma

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH://user/rhodesd/pecan-2015/Cygnus/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH://user/rhodesd/pecan-2015/GOSIAFitter/bin

if [ ! ${ROOTSYS} ]; then
#    module load root/gnu/5.34.32
  if [ -e /scratch/Programs/root-6.06.08/bin/thisroot.sh ]; then
    source /scratch/Programs/root-6.06.08/bin/thisroot.sh 
  elif [ -e /scratch/Programs/root5_34_36/bin/thisroot.sh ]; then
    source /scratch/Programs/root5_34_36/bin/thisroot.sh 
  else 
    module load root/gnu/5.34.32
  fi
fi

if [ ! ${GRUTSYS} ]; then
   if [ -d ${HOME}/GRUTinizer ]; then # grutinizer2 ]; then
    source ${HOME}/GRUTinizer/thisgrut.sh
   fi
fi


################
#NSCL Default.
################
if [ -f ~/.bash_functions ]; then
  . ~/.bash_functions
fi
if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

export PS1='\[[1m\]<\h:\W >\[[m\]'
export RSYNC_RSH='ssh'
################
################


# add the current directory to the PATH

PATH=${PATH}:.
# set the umask for user,group, but not other writes
umask 002
export PATH

export NSCL=1



set prompt = "%{\033[32m%}%p%{\033[0m%} %{\033[31m%}%n%{\033[0m%}@%{\033[34m%}%m%{\033[0m%}:%~% "
set history = 10000
set savehist = 10000





# Color definitions (taken from Color Bash Prompt HowTo).

# Normal Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

NC="\e[m"               # Color Reset

ALERT=${BWhite}${On_Red} # Bold White on red background




#-------------------------------------------------------------
# Shell Prompt - for many examples, see:
#       http://www.debian-administration.org/articles/205
#       http://www.askapache.com/linux/bash-power-prompt.html
#       http://tldp.org/HOWTO/Bash-Prompt-HOWTO
#       https://github.com/nojhan/liquidprompt
#-------------------------------------------------------------
# Current Format: [TIME USER@HOST PWD] >
# TIME:
#    Green     == machine load is low
#    Orange    == machine load is medium
#    Red       == machine load is high
#    ALERT     == machine load is very high
# USER:
#    Cyan      == normal user
#    Orange    == SU to user
#    Red       == root
# HOST:
#    Cyan      == local session
#    Green     == secured remote connection (via ssh)
#    Red       == unsecured remote connection
# PWD:
#    Green     == more than 10% free disk space
#    Orange    == less than 10% free disk space
#    ALERT     == less than 5% free disk space
#    Red       == current user does not have write privileges
#    Cyan      == current filesystem is size zero (like /proc)
# >:
#    White     == no background or suspended jobs in this shell
#    Cyan      == at least one background job in this shell
#    Orange    == at least one suspended job in this shell
#
#    Command is added to the history file each time you hit enter,
#    so it's available to all shells (using 'history -a').




# Test connection type:
if [ -n "${SSH_CONNECTION}" ]; then
    CNX=${Cyan}        # Connected on remote machine, via ssh (good).
elif [[ "${DISPLAY%%:0*}" != "" ]]; then
    CNX=${ALERT}        # Connected on remote machine, not via ssh (bad).
else
    CNX=${BGreen}        # Connected on local machine.
fi

# Test user type:
if [[ ${USER} == "root" ]]; then
    SU=${ALERT}           # User is root.
elif [[ ${USER} != $(logname) ]]; then
    SU=${BRed}          # User is not login user.
else
    SU=${Red}         # User is normal (well ... most of us are).
fi



NCPU=$(grep -c 'processor' /proc/cpuinfo)    # Number of CPUs
SLOAD=$(( 100*${NCPU} ))        # Small load
MLOAD=$(( 200*${NCPU} ))        # Medium load
XLOAD=$(( 400*${NCPU} ))        # Xlarge load


# Returns system load as percentage, i.e., '40' rather than '0.40)'.
function load()
{
    local SYSLOAD=$(cut -d " " -f1 /proc/loadavg | tr -d '.')
    # System load of the current host.
    echo $((10#$SYSLOAD))       # Convert to decimal.
}


# Returns a color indicating system load.
function load_color()
{
    local SYSLOAD=$(load)
    if [ ${SYSLOAD} -gt ${XLOAD} ]; then
        echo -en ${ALERT}
    elif [ ${SYSLOAD} -gt ${MLOAD} ]; then
        echo -en ${Red}
    elif [ ${SYSLOAD} -gt ${SLOAD} ]; then
        echo -en ${BRed}
    else
        echo -en ${BGreen}
    fi
}

function disk_color()
{
    if [ ! -w "${PWD}" ] ; then
        echo -en ${Red}
        # No 'write' privilege in the current directory.
    elif [ -s "${PWD}" ] ; then
        local used=$(command df -P "$PWD" |
                   awk 'END {print $5} {sub(/%/,"")}')
        if [ ${used} -gt 95 ]; then
            echo -en ${ALERT}           # Disk almost full (>95%).
        elif [ ${used} -gt 90 ]; then
            echo -en ${BRed}            # Free disk space almost gone.
        else
            echo -en ${BGreen}           # Free disk space is ok.
        fi
    else
        echo -en ${Cyan}
        # Current directory is size '0' (like /proc, /sys etc).
    fi
}

# Returns a color according to running/suspended jobs.
function job_color()
{
    if [ $(jobs -s | wc -l) -gt "0" ]; then
        echo -en ${BRed}
    elif [ $(jobs -r | wc -l) -gt "0" ] ; then
        echo -en ${BCyan}
    fi
}

# Now we construct the prompt.
PROMPT_COMMAND="history -a"
case ${TERM} in
  *term | rxvt | linux)
        PS1="\[\$(load_color)\][\A\[${NC}\] "
        # Time of day (with load info):
        PS1="\[\$(load_color)\][\A\[${NC}\] "
        # User@Host (with connection type info):
        PS1=${PS1}"\[${SU}\]\u\[${NC}\]@\[${CNX}\]\h\[${NC}\] "
        # PWD (with 'disk space' info):
        PS1=${PS1}"\[\$(disk_color)\]\W]\[${NC}\] "
        # Prompt (with 'job' info):
        PS1=${PS1}"\[\$(job_color)\]>\[${NC}\] "
        # Set title of current xterm:
        PS1=${PS1}"\[\e]0;[\u@\h] \w\a\]"
        ;;
    *)
        PS1="(\A \u@\h \W) > " # --> PS1="(\A \u@\h \w) > "
                               # --> Shows full pathname of current dir.
        ;;
esac




export TIMEFORMAT=$'\nreal %3R\tuser %3U\tsys %3S\tpcpu %P\n'
export HISTIGNORE="&:bg:fg:ll:h"
export HISTTIMEFORMAT="$(echo -e ${BCyan})[%d/%m %H:%M:%S]$(echo -e ${NC}) "
export HISTCONTROL=ignoredups
export HOSTFILE=$HOME/.hosts    # Put a list of remote hosts in ~/.hosts


if [ -d ${HOME}/scripts ]; then
   export PATH=${PATH}:${HOME}/scripts
fi

# User specific aliases and functions

alias cp='cp -ip'
alias mv='mv -i'
alias rm='rm -i'
alias l='ls'
alias ll='ls -l'
alias lll='ls -al'
alias sl='ls | more'
alias cls='clear'
alias h='history|tail -32'
alias m='more'
alias c='cat'
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias dir='ll'

#alias ls='ls -F --color=tty'

alias ls='ls -h --color'
alias lt='ls -ltr'

function load_janusgrut() {
  if [ -e /user/rhodesd/GRUTinizer_Janus/thisgrut.sh ]; then
    source /user/rhodesd/GRUTinizer_Janus/thisgrut.sh 
  else
    echo "Failed to load janus grut" >&2
  fi
}

function load_gretgrut(){
  if [ -e /user/rhodesd/GRUTinizer/thisgrut.sh ]; then
    source /user/rhodesd/GRUTinizer/thisgrut.sh 
  else
    echo "Failed to load gret grut" >&2
  fi
}


#module load geant4/4.9.6.02
load_geant4_9() {
        module unload geant4
        module load geant4/4.9.6.04
        source $G4INSTALL/geant4make.sh
        source $G4INSTALL/../../../bin/geant4.sh
}

load_geant4_10() {
        module unload geant4
        module load geant4/10.04.02
        source $G4INSTALL/geant4make.sh
        source $G4INSTALL/../../../bin/geant4.sh
}

#source /mnt/misc/sw/x86_64/Debian/8/geant4/gnu/4.9.6.02/share/Geant4-9.6.2/geant4make/geant4make.sh
